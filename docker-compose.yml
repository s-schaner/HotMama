version: "3.9"

services:
  queue:
    image: redis:7.2.4-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis-data:/data

  api:
    build:
      context: .
      dockerfile: deploy/api/Dockerfile
    depends_on:
      queue:
        condition: service_healthy
    env_file:
      - .env
    environment:
      REDIS_URL: ${REDIS_URL:-redis://queue:6379/0}
      PROFILE: ${PROFILE:-cpu}
    ports:
      - "8000:8000"
    volumes:
      - ./sessions:/app/sessions
    restart: unless-stopped
    profiles: ["default", "gpu"]

  gui:
    build:
      context: .
      dockerfile: deploy/gui/Dockerfile
    depends_on:
      api:
        condition: service_started
    env_file:
      - .env
    environment:
      GUI_API_BASE_URL: ${GUI_API_BASE_URL:-http://api:8000/v1}
    ports:
      - "7860:7860"
    volumes:
      - ./sessions:/app/sessions
    restart: unless-stopped
    profiles: ["default", "gpu"]

  worker-vision-cpu:
    build:
      context: .
      dockerfile: deploy/worker-vision/Dockerfile
      target: cpu
    depends_on:
      queue:
        condition: service_healthy
    env_file:
      - .env
    environment:
      PROFILE: cpu
    volumes:
      - ./sessions:/app/sessions
    restart: unless-stopped
    profiles: ["default"]

  worker-vision-cuda:
    build:
      context: .
      dockerfile: deploy/worker-vision/Dockerfile
      target: cuda
    depends_on:
      queue:
        condition: service_healthy
    env_file:
      - .env
    environment:
      PROFILE: gpu
    volumes:
      - ./sessions:/app/sessions
    restart: unless-stopped
    profiles: ["gpu"]
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: ["gpu"]
    runtime: nvidia

volumes:
  redis-data:
